(()=>{"use strict";const e=e=>{const t=document.getElementById("table-body");t.innerHTML="",e&&e.forEach((e=>{t.insertAdjacentHTML("beforeend",`\n        <tr data-key=${e.id}>\n          <th scope="row">${e.id}</th>\n          <td>${e.name}</td>\n          <td>${e.email}</td>\n          <td>${e.children?"Есть":"Нет"}</td>\n          <td>\n            <div class="form-check form-switch">\n              <input\n                class="form-check-input"\n                type="checkbox"\n                role="switch"\n                id="form-children"\n                ${e.permissions?"checked":""}\n              />\n            </div>\n          </td>\n          <td>\n            <div\n              class="btn-group btn-group-sm"\n              role="group"\n              aria-label="Basic example"\n            >\n              <button type="button" class="btn btn-warning btn-edit">\n                <i class="bi-pencil-square"></i>\n              </button>\n              <button type="button" class="btn btn-danger btn-remove">\n                <i class="bi-person-x"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n      `)}))};window.userService=new class{async getData(e,t){try{const s=await fetch(e,t);return await s.json()}catch(e){console.log(`Oops: ${e.message}`),this.showError("Произошла ошибка, данных нет!")}}async sendData(e,t,s){const n={method:t,headers:{"Content-Type":"application/json"},body:s?JSON.stringify(s):null};return await this.getData(e,n)}async getUsers(){return await this.getData("http://localhost:4545/users")}async addUser(e){return await this.sendData("http://localhost:4545/users","POST",e)}async removeUser(e){return await this.sendData(`http://localhost:4545/users/${e}`,"DELETE")}async changeUser(e,t){return await this.sendData(`http://localhost:4545/users/${e}`,"PATCH",t)}async getUser(e){return await this.getData(`http://localhost:4545/users/${e}`)}async editUser(e,t){return await this.sendData(`http://localhost:4545/users/${e}`,"PUT",t)}async filterUsers(e){return await this.getData(`http://localhost:4545/users?${e}=true`)}async getSortUsers(e){return await this.getData(`http://localhost:4545/users?_sort=${e.name}&_order=${e.value}`)}async getSearchUsers(e){return await this.getData(`http://localhost:4545/users?name_like=${e}`)}showError(e){const t=document.querySelector(".table-responsive"),s=document.createElement("p");s.textContent=e,s.style.color="red",s.style.textAlign="center",t.append(s)}},userService.getUsers().then((t=>{e(t)})),(()=>{const t=document.querySelector("form"),s=document.querySelector("#form-name"),n=document.querySelector("#form-email"),r=document.querySelector("#form-children");t.addEventListener("submit",(a=>{if(a.preventDefault(),!t.dataset.method){const a={name:s.value,email:n.value,children:r.checked,permissions:!1};userService.addUser(a).then((()=>{userService.getUsers().then((s=>{e(s),t.reset()}))}))}}))})(),document.getElementById("table-body").addEventListener("click",(t=>{if(t.target.closest(".btn-remove")){const s=t.target.closest("tr").dataset.key;userService.removeUser(s).then((()=>{userService.getUsers().then((t=>{e(t)}))}))}})),document.getElementById("table-body").addEventListener("click",(t=>{if(t.target.closest("input[type=checkbox]")){const s=t.target.closest("tr"),n=s.querySelector("input[type=checkbox]"),r=s.dataset.key;userService.changeUser(r,{permissions:n.checked}).then((()=>{userService.getUsers().then((t=>{e(t)}))}))}})),(()=>{const t=document.getElementById("table-body"),s=document.querySelector("form"),n=document.querySelector("#form-name"),r=document.querySelector("#form-email"),a=document.querySelector("#form-children");t.addEventListener("click",(e=>{if(e.target.closest(".btn-edit")){const t=e.target.closest("tr").dataset.key;userService.getUser(t).then((e=>{n.value=e.name,r.value=e.email,a.checked=e.children,s.dataset.method=t}))}})),s.addEventListener("submit",(t=>{if(t.preventDefault(),s.dataset.method){const t=s.dataset.method,c={name:n.value,email:r.value,children:a.checked,permissions:!1};userService.editUser(t,c).then((()=>{userService.getUsers().then((t=>{e(t),s.reset(),s.removeAttribute("data-method")}))}))}}))})(),(()=>{const t=document.getElementById("btn-isChildren"),s=document.getElementById("btn-isPermissions"),n=document.getElementById("btn-isAll");t.addEventListener("click",(()=>{userService.filterUsers("children").then((t=>e(t)))})),s.addEventListener("click",(()=>{userService.filterUsers("permissions").then((t=>e(t)))})),n.addEventListener("click",(()=>{userService.getUsers().then((t=>e(t)))}))})(),(()=>{const t=document.getElementById("sort-is-children");let s=!1;t.style.cursor="pointer",t.addEventListener("click",(()=>{userService.getSortUsers({name:"children",value:s?"asc":"desc"}).then((t=>{e(t)})).catch((e=>console.log(e.message))),s=!s}))})(),(()=>{const t=document.getElementById("search-input"),s=((e,t=300)=>{let s;return(...n)=>{clearTimeout(s),s=setTimeout((()=>{e.apply(void 0,n)}),t)}})((()=>{userService.getSearchUsers(t.value).then((t=>e(t)))}),500);t.addEventListener("input",s)})()})();